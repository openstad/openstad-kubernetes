---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ template "openstad.auth.fullname" . }}
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "openstad.labels" . | nindent 4 }}
    app.kubernetes.io/component: {{ template "openstad.auth.fullname" . }}-deployment
spec:
  replicas: {{ .Values.auth.replicas }}
  selector:
    matchLabels:
      app: {{ .Values.auth.label }}
  template:
    metadata:
      labels:
        app: {{ .Values.auth.label }}
    spec:
      volumes:
        - name: certs
          secret:
            secretName: openstad-auth-certificates
      containers:
      - name: {{ template "openstad.auth.fullname" . }}
        image: {{ .Values.auth.deploymentContainer.image }}
        imagePullPolicy: Always
        volumeMounts:
          - mountPath: "/home/app/certs"
            name: certs
            readOnly: true
        ports:
            - name: http
              containerPort: {{ .Values.auth.service.httpPort }}
        env:
          # HOSTING
          - name: APP_URL
            value: https://{{ template "openstad.auth.url" . }}

          # HOSTING
          - name: ADMIN_REDIRECT_URL
            value: https://{{ template  "openstad.admin.url" . }}

          - name: API_URL
            value: https://{{ template "openstad.api.url" . }}

          - name: SESSION_SECRET
            valueFrom:
              secretKeyRef:
                key: secret
                name: openstad-session-secret

          # MySQL DATABASE
          - name: DB_VENDOR
            valueFrom:
              secretKeyRef:
                name: openstad-db-credentials
                key: type

          - name: DB_USER
            valueFrom:
              secretKeyRef:
                name: openstad-db-credentials
                key: username

          - name: DB_PASSWORD
            valueFrom:
              secretKeyRef:
                name: mysql-secret
                key: mysql-password

          - name: DB_HOST
            valueFrom:
              secretKeyRef:
                name: openstad-db-credentials
                key: hostname

          - name: DB_PORT
            valueFrom:
              secretKeyRef:
                name: openstad-db-credentials
                key: hostport
          - name: MYSQL_CA_CERT
            valueFrom:
              secretKeyRef:
                name: openstad-db-credentials
                key: ca-cert
          - name: MONGO_DB_CONNECTION_STRING
            valueFrom:
              secretKeyRef:
                key: auth-connection-string
                name: mongo-secret
          - name: MONGO_DB_HOST
            valueFrom:
              secretKeyRef:
                key: hostname
                name: openstad-mongo-credentials
          - name: MONGO_DB_PORT
            valueFrom:
              secretKeyRef:
                key: hostport
                name: openstad-mongo-credentials
          - name: MONGO_DB_USER
            valueFrom:
              secretKeyRef:
                key: user
                name: openstad-mongo-credentials
          - name: MONGO_DB_PASSWORD
            valueFrom:
              secretKeyRef:
                key: password
                name: mongo-secret
          - name: MONGO_DB_AUTHSOURCE
            valueFrom:
              secretKeyRef:
                key: auth-source
                name: openstad-mongo-credentials
          - name: DB_NAME
            valueFrom:
              secretKeyRef:
                name: openstad-auth-db
                key: database

          # SMTP MAIL
          - name: MAIL_SERVER_URL
            value: "{{ .Values.secrets.mail.auth.host }}"

          - name: MAIL_SERVER_PORT
            value: "{{ .Values.secrets.mail.auth.port }}"

          - name: MAIL_SERVER_SECURE
            value: "{{ .Values.secrets.mail.auth.secure | default 'yes' }}"

          - name: MAIL_SERVER_PASSWORD
            value: "{{ .Values.secrets.mail.auth.password }}"

          - name: MAIL_SERVER_USER_NAME
            value: "{{ .Values.secrets.mail.auth.user }}"

          - name: EMAIL_ASSETS_URL
            value: https://{{ template "openstad.auth.url" . }}/email

          - name: FRONTEND_URL
            value: https://www.{{ .Values.host.base }}

          - name: ADMIN_URL
            value: https://{{ template "openstad.admin.url" . }}

          - name: FROM_NAME
            value: {{ default .Values.auth.fromName "Openstad api" }}

          - name: FROM_EMAIL
            value: {{ or .Values.auth.fromEmail .Values.secrets.mail.auth.user }}

          - name: AUTH_FIRST_CLIENT_LOGIN_CODE
            valueFrom:
              secretKeyRef:
                key: first_login_token
                name: openstad-auth-credentials

          - name: AUTH_FIRST_CLIENT_ID
            valueFrom:
              secretKeyRef:
                key: client_id
                name: openstad-auth-credentials

          - name: AUTH_FIRST_CLIENT_SECRET
            valueFrom:
              secretKeyRef:
                key: client_secret
                name: openstad-auth-credentials

          - name: AUTH_ADMIN_CLIENT_ID
            valueFrom:
              secretKeyRef:
                key: admin_client_id
                name: openstad-auth-credentials

          - name: AUTH_ADMIN_CLIENT_SECRET
            valueFrom:
              secretKeyRef:
                key: admin_client_secret
                name: openstad-auth-credentials

          - name: DEFAULT_FAVICON
            value: {{ .Values.auth.defaultFavicon }}

          # KUBERNETES
          - name: KUBERNETES_NAMESPACE
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace

          - name: MY_POD_IP
            valueFrom:
              fieldRef:
                fieldPath: status.podIP

          {{- if .Values.auth.extraEnvVars }}
          {{- include "common.tplvalues.render" (dict "value" .Values.auth.extraEnvVars "context" $) | nindent 10 }}
          {{- end }}

        resources:
{{ toYaml .Values.auth.resources | indent 12 }}
        readinessProbe:
          tcpSocket:
            port: {{ .Values.auth.service.httpPort }}
          initialDelaySeconds: 5
          periodSeconds: 5
        livenessProbe:
          tcpSocket:
            port: {{ .Values.auth.service.httpPort }}
          initialDelaySeconds: {{ .Values.auth.probe.liveness.initialDelaySeconds }}
          periodSeconds: {{ .Values.auth.probe.liveness.periodSeconds }}
      initContainers:
      - name: init-db-ready
        image: {{ .Values.auth.deploymentContainer.image }}
        env:
        - name: DB_ADDR
          valueFrom:
            secretKeyRef:
              name: openstad-db-credentials
              key: hostname
        - name: DB_PORT
          valueFrom:
            secretKeyRef:
              name: openstad-db-credentials
              key: hostport
        - name: DB_HOST
          valueFrom:
              secretKeyRef:
                name: openstad-db-credentials
                key: hostname
        - name: DB_USER
          valueFrom:
              secretKeyRef:
                name: openstad-db-credentials
                key: username
        - name: DB_PASSWORD
          valueFrom:
            secretKeyRef:
              name: mysql-secret
              key: mysql-password
        - name: DB_NAME
          valueFrom:
              secretKeyRef:
                name: openstad-auth-db
                key: database
        command: ["/bin/sh","-c"]
        args: ['knex migrate:latest']
